esphome:
  name: az32e09
  friendly_name: az32e09

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Wp3hg79SodlojKQH7j3+ExMH9jKwZ0f3Y/B3Vupzz+o="

ota:
  password: "b23d6ba7f586b662382cc42578256198"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Az32E09 Fallback Hotspot"
    password: "qvGWVqgMFtzn"


captive_portal:

# Ich hatte auch Probleme das Display anzuschließen. Hier war definitiv der Aufdruck falsch! Pin1 war mit RST (Reset) gekennzeichnet, Pin 6 mit Vcc.
#Richtig war hier

#Pin1: Vcc (rechteckiger Lötpunkt) 3,3V
#Pin2: CE
#Pin3: DC
#Pin4: DIN
#Pin5: CLK
#Pin6: RST
#Pin7: Light (gegen Masse!) = Ground (Gnd) = Connects to the ground of the circuit.
#Pin8: GND

sensor:
  - platform: dht
    pin: GPIO25  # D2
    model: DHT11
    temperature:
      id: my_temp
      name: "Temperature Sensor"
    humidity:
      id: my_humi
      name: "Humidity Sensor"
    update_interval: 60s

# Example configuration entry
spi:
  clk_pin: GPIO18 # Clock (CLK) = All SPI modules require a common clock, this clock source is supplied to this pin --- SCK=GPIO18=D5
  mosi_pin: GPIO23 # Serial Input (DIN) = This is the input pin (MOSI) through which serial instructions are sent --- MOSI=GPIO23=D7

font:
  - file: _fonts/ComicSansMS3.ttf  # https://www.wfonts.com/font/comic-sans-ms
    id: my_font
    size: 20

display:
  - platform: pcd8544 # Nokia5110 LCD it.print(0, 0, id(my_font), "Hello World!"); it.printf(1, 8, id(my_font), "T: %.1f°C", id(my_temp).state); it.printf(1, 30, id(my_font), "H: %.1f%%", id(my_humi).state);
    reset_pin: GPIO26 # =D0 --- RST / Reset = This pin resets the module. It an active low pin (resets when 0V is provided)
    cs_pin: GPIO5 # =D8  CS0 --- Chip Enable (CE) = This pin is made low (0V) to select this particular display when more than one SPI peripherals are used.
    dc_pin: GPIO22 # =D1  Data/Command (DC) = This pin is used to switch between Data mode (high) and Command mode (low)
    contrast: 0x7f
    lambda: |-
      it.printf(1, 0, id(my_font), "T: %.1f°C", id(my_temp).state);
      it.printf(1, 22, id(my_font), "H: %.1f%%", id(my_humi).state);


    