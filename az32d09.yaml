esphome:
  name: az32d09
  friendly_name: az32d09

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#dirty fix esphome2.2 before update ,  https://github.com/esphome/issues/issues/4432#issuecomment-1516484884
#https://github.com/esphome/issues/issues/4437


#external_components:
#  - source: github://voed/esphome@dev
#    components: [ max7219digit ]


#Selbes Problem nach ESPHOME update.
#Es ist war noch immer gespiegelt aber wenigstens kann man das display lesen.
#    rotate_chip: 0 flip_x: false reverse_enable: true

#    rotate_chip: 180
#    reverse_enable: false
 #   flip_x: false
# AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

# Enable Home Assistant API
api:
  encryption:
    key: "Q78SGEiTrbgrqje4xUeWpBONrf8qDo4P51zhCdA56hs="
  reboot_timeout: 0s
  services:
    - service: write_text
      variables:
        message: string
      then:
        - globals.set:
            id: matrix_text
            value: !lambda 'return message;'

        - delay: 20s
        - globals.set:
            id: matrix_text
            value: !lambda 'return "";'

ota:
  password: "aa5a02120417e0074160d87e85c9264d"

wifi:
  ssid: 7wlan # !secret wifi_ssid
  password: !secret wifi_password
#  power_save_mode: none
#  reboot_timeout: 0s
#  domain: ".local"       #  domain  .fritz.box 
#  output_power: 20dB
#  fast_connect: true

#  manual_ip:
#    static_ip: 192.168.1.174 # 3EG5-Garten (A) = Bereich ,  d9
#    gateway: 192.168.1.1
#    subnet: 255.255.255.0 # subnet2 test 255.255.0.0
#    dns1: 192.168.1.1
#    dns2: 8.8.8.8

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Az32D09 Fallback Hotspot"
    password: "lJHBLO3zxn6W"

captive_portal:

# MQ2 Smoke Gas Sensor
sensor:
  - platform: wifi_signal
    name: "D09 WiFi Signal"
    update_interval: 4s     #60s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1

switch:
  - platform: restart
    name: "D09 Restart"

  - platform: shutdown
    name: "D09 Shutdown"

binary_sensor:
  - platform: status
    name: "D09 Status"

time:
  - platform: sntp
    id: esphome_time
    servers:
      - 0.pool.ntp.org

#----------------------------
#   Globale Variablen
#----------------------------
globals:
  - id: matrix_text
    type: std::string
    restore_value: no
    initial_value: ''
  - id: anim_pos
    type: int
    restore_value: no
    initial_value: '0'

#----------------------------
#   LED Matrix (MAX7219)
#----------------------------
font:
  - file: "pixelmix.ttf"
    id: digit_font
    size: 8

spi:
  clk_pin: GPIO18 #D5 SCK
  mosi_pin: GPIO23 #D7 Mosi

display:
  - platform: max7219digit

    #dirty fix from esphome 2.2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    rotate_chip: 0 # 180
    reverse_enable: false
    flip_x: false
    #dirty fix end AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

    id: matrix_display
    cs_pin: GPIO19 #D6 Miso
    num_chips: 4
    intensity: 10
    scroll_enable: true
    scroll_mode: CONTINUOUS
    scroll_speed: 120ms
    scroll_delay: 3s
    scroll_dwell: 22s
    # Wenn Infotext vorhanden ist, diesen anzeigen. 
    # Ansonsten Datum auf Matrix ausgeben
    # id(matrix_display).printf(0, 0, id(digit_font), " %s . | .  ", id(matrix_text).c_str());
    # it.print(0,0, id(digit_font), id(matrix_text).c_str());
    lambda: |-
      if(strlen(id(matrix_text).c_str()) > 0){
        it.printf(0, 0, id(digit_font), " %s - - - ", id(matrix_text).c_str());
      } else {
        id(matrix_display).strftime(0, 0, id(digit_font), "%d.%m", id(esphome_time).now());
      }

    